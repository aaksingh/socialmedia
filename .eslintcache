[{"/home/aakash/Documents/MyProjects/instagram/instagram/src/index.js":"1","/home/aakash/Documents/MyProjects/instagram/instagram/src/Components/Firebase/Firebase.js":"2","/home/aakash/Documents/MyProjects/instagram/instagram/src/Components/JS/ImageUpload.js":"3","/home/aakash/Documents/MyProjects/instagram/instagram/src/Components/JS/Post.js":"4","/home/aakash/Documents/MyProjects/instagram/instagram/src/App.js":"5"},{"size":500,"mtime":1609606162024,"results":"6","hashOfConfig":"7"},{"size":616,"mtime":1609654553201,"results":"8","hashOfConfig":"7"},{"size":1872,"mtime":1609684625030,"results":"9","hashOfConfig":"7"},{"size":2137,"mtime":1609753346825,"results":"10","hashOfConfig":"7"},{"size":5363,"mtime":1609828437168,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"vwfe6d",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/aakash/Documents/MyProjects/instagram/instagram/src/index.js",[],["25","26"],"/home/aakash/Documents/MyProjects/instagram/instagram/src/Components/Firebase/Firebase.js",[],"/home/aakash/Documents/MyProjects/instagram/instagram/src/Components/JS/ImageUpload.js",["27"],"import { Button } from \"@material-ui/core\";\nimport firebase from \"firebase\";\nimport React, { useState } from \"react\";\nimport { db, auth, storage } from \"../Firebase/Firebase\";\nimport \"../CSS/ImageUpload.css\";\nfunction ImageUpload({ username }) {\n  const [caption, setCaption] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [progress, setProgress] = useState(0);\n\n  const handlechange = (e) => {\n    if (e.target.files[0]) {\n      setImage(e.target.files[0]);\n    }\n  };\n\n  const handleupload = (e) => {\n    const uploadTask = storage.ref(`images/${image.name}`).put(image);\n    uploadTask.on(\n      \"state_changed\",\n      (snapshot) => {\n        const upload_progress = Math.round(\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n        );\n        setProgress(upload_progress);\n      },\n      (error) => {\n        alert(error.message);\n      },\n      () => {\n        storage\n          .ref(\"images\")\n          .child(image.name)\n          .getDownloadURL()\n          .then((url) => {\n            db.collection(\"posts\").add({\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n              caption: caption,\n              imageUrl: url,\n              username: username,\n            });\n            setProgress(0);\n            setCaption(\"\");\n            setImage(null);\n          });\n      }\n    );\n  };\n  return (\n    <div className=\"imageupload\">\n      <div className=\"imageupload__upload\">\n        <progress value={progress} max=\"100\"></progress>\n        <input\n          type=\"text\"\n          onChange={(event) => setCaption(event.target.value)}\n          value={caption}\n        />\n        <input type=\"file\" onChange={handlechange} />\n        <Button className=\"imageupload__button\" onClick={handleupload}>\n          Upload\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default ImageUpload;\n","/home/aakash/Documents/MyProjects/instagram/instagram/src/Components/JS/Post.js",["28"],"import React, { useState, useEffect } from \"react\";\nimport \"../CSS/Post.css\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport firebase from \"firebase\";\nimport { db } from \"../Firebase/Firebase.js\";\nfunction Post({ postId, user, username, caption, imageUrl }) {\n  const [comments, setcommments] = useState([]);\n  const [comment, setcommment] = useState(\"\");\n\n  useEffect(() => {\n    let unsubscribe;\n    if (postId) {\n      unsubscribe = db\n        .collection(\"posts\")\n        .doc(postId)\n        .collection(\"comments\")\n        .orderBy(\"timestamp\", \"desc\")\n        .onSnapshot((snapshot) => {\n          setcommments(snapshot.docs.map((doc) => doc.data()));\n        });\n    }\n  }, [postId]);\n  const postComment = (event) => {\n    event.preventDefault();\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setcommment(\"\");\n  };\n  return (\n    <div className=\"post\">\n      <div className=\"post__header\">\n        <Avatar\n          className=\"post__avatar\"\n          alt=\"Vikrant\"\n          src=\"/static/images/avatar/1.jpg\"\n        />\n        <h3>{username}</h3>\n      </div>\n\n      <img className=\"post__image\" src={imageUrl} alt=\"\" />\n      <h4 className=\"post__text\">\n        <strong>{username}</strong>\n        {caption}\n      </h4>\n      <div className=\"post__comments\">\n        {comments.map((comment) => (\n          <p>\n            <strong>{comment.username}</strong>\n            {comment.text}\n          </p>\n        ))}\n      </div>\n      {user && (\n        <form className=\"post__commentBox\">\n          <input\n            className=\"post__input\"\n            type=\"text\"\n            placeholder=\"enter comments\"\n            value={comment}\n            onChange={(e) => setcommment(e.target.value)}\n          />\n          <button\n            className=\"post__button\"\n            type=\"submit\"\n            disabled={!comment}\n            onClick={postComment}\n          >\n            Post\n          </button>\n        </form>\n      )}\n    </div>\n  );\n}\n\nexport default Post;\n","/home/aakash/Documents/MyProjects/instagram/instagram/src/App.js",["29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":4,"column":14,"nodeType":"36","messageId":"37","endLine":4,"endColumn":18},{"ruleId":"34","severity":1,"message":"38","line":13,"column":7,"nodeType":"36","messageId":"37","endLine":13,"endColumn":18},{"ruleId":"34","severity":1,"message":"39","line":5,"column":20,"nodeType":"36","messageId":"37","endLine":5,"endColumn":27},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","'unsubscribe' is assigned a value but never used.","'storage' is defined but never used.","no-global-assign","no-unsafe-negation"]